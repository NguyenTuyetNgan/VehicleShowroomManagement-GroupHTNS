/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import bll.Manager;
import dao.EmployeeDAO;
import dto.Department;
import dto.Employee;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.sql.Date;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Locale;
import java.util.ResourceBundle;
import java.util.Vector;
import javax.swing.JButton;
import javax.swing.table.DefaultTableModel;
import org.jdesktop.swingx.decorator.ColorHighlighter;
import org.jdesktop.swingx.decorator.HighlightPredicate;
import org.jdesktop.swingx.decorator.Highlighter;
import org.jdesktop.swingx.decorator.HighlighterFactory;

/**
 *
 * @author BINH
 */
public class pnlEmployee extends javax.swing.JPanel implements ActionListener {

    /**
     * Creates new form pnlCar
     */
    public pnlEmployee() {
        initComponents();
        loadData("");
        loadDepartmentData();
        JButton[] arrButton = {btnDeleteEmp, btnUpdateEmp, btnNewEmp, btnDetailsEmp, btnUpdateListEmployee};
        if (!Main.DepartmentName.equals("HR")) {
            new Utility().disableButton(arrButton);
           department.setSize(0, 0);
           tbpEmployee.remove(department);
           btnNext.setVisible(false);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tbpEmployee = new javax.swing.JTabbedPane();
        pnlEmp = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblEmployee = new org.jdesktop.swingx.JXTable();
        txtSearchEmployee = new org.jdesktop.swingx.JXSearchField();
        jPanel7 = new javax.swing.JPanel();
        btnNewEmp = new javax.swing.JButton();
        btnUpdateEmp = new javax.swing.JButton();
        btnDeleteEmp = new javax.swing.JButton();
        btnDetailsEmp = new javax.swing.JButton();
        lblSearchEmployee = new javax.swing.JLabel();
        btnNext = new javax.swing.JButton();
        btnUpdateListEmployee = new javax.swing.JButton();
        btnEmployeeReport = new javax.swing.JButton();
        department = new javax.swing.JPanel();
        jPanel18 = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        tblDepartment = new org.jdesktop.swingx.JXTable();
        btnBack = new javax.swing.JButton();
        pnlDept = new javax.swing.JPanel();
        jPanel19 = new javax.swing.JPanel();
        btnNewDept = new javax.swing.JButton();
        btnDeleteDept = new javax.swing.JButton();
        txtName = new javax.swing.JTextField();
        lblName = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pnlEmp.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblEmployee.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, true, true, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblEmployee.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblEmployeeMouseClicked(evt);
            }
        });
        Highlighter simpleStripHL = HighlighterFactory.createSimpleStriping();
        tblEmployee.addHighlighter(new ColorHighlighter(HighlightPredicate.ROLLOVER_ROW,
            null, new Color(0, 0, 255)));
    tblEmployee.setHighlighters(simpleStripHL);
    tblEmployee.addHighlighter(new ColorHighlighter(HighlightPredicate.ROLLOVER_ROW,
        null, new Color(255, 102, 0)));
jScrollPane1.setViewportView(tblEmployee);

pnlEmp.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 680, 270));

txtSearchEmployee.addKeyListener(new java.awt.event.KeyAdapter() {
    public void keyReleased(java.awt.event.KeyEvent evt) {
        txtSearchEmployeeKeyReleased(evt);
    }
    });
    pnlEmp.add(txtSearchEmployee, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 72, 220, 20));

    jPanel7.setLayout(new java.awt.GridLayout(1, 0));

    btnNewEmp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/add.png"))); // NOI18N
    btnNewEmp.setText("New");
    btnNewEmp.setActionCommand("newEmp");
    btnNewEmp.addActionListener(this);
    jPanel7.add(btnNewEmp);

    btnUpdateEmp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/update.png"))); // NOI18N
    btnUpdateEmp.setText("Update");
    btnUpdateEmp.setActionCommand("updateEmp");
    btnUpdateEmp.addActionListener(this);
    btnUpdateEmp.setEnabled(false);
    jPanel7.add(btnUpdateEmp);

    btnDeleteEmp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/delete.png"))); // NOI18N
    btnDeleteEmp.setText("Delete");
    btnDeleteEmp.setActionCommand("deleteEmp");
    btnDeleteEmp.addActionListener(this);
    btnDeleteEmp.setEnabled(false);
    jPanel7.add(btnDeleteEmp);

    btnDetailsEmp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/about_16.png"))); // NOI18N
    btnDetailsEmp.setText("Details");
    btnDetailsEmp.setActionCommand("detailsEmp");
    btnDetailsEmp.addActionListener(this);
    btnDetailsEmp.setEnabled(false);
    jPanel7.add(btnDetailsEmp);

    pnlEmp.add(jPanel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 60, 400, 30));

    lblSearchEmployee.setForeground(new java.awt.Color(51, 51, 51));
    lblSearchEmployee.setText("Search Employee Name or Department Name");
    pnlEmp.add(lblSearchEmployee, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 44, -1, 30));

    btnNext.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/Next-18.gif"))); // NOI18N
    btnNext.setActionCommand("next");
    btnNext.addActionListener(this);
    pnlEmp.add(btnNext, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 380, 60, 30));

    btnUpdateListEmployee.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/update.png"))); // NOI18N
    btnUpdateListEmployee.setText("Update List");
    btnUpdateListEmployee.setActionCommand("updateList");
    btnUpdateListEmployee.addActionListener(this);
    pnlEmp.add(btnUpdateListEmployee, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 380, 110, 30));

    btnEmployeeReport.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/Script20x20.gif"))); // NOI18N
    btnEmployeeReport.setText("Report");
    btnEmployeeReport.setActionCommand("reportEmployee");
    btnEmployeeReport.addActionListener(this);
    pnlEmp.add(btnEmployeeReport, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 380, -1, -1));

    tbpEmployee.addTab("Employee", pnlEmp);

    jPanel18.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

    tblDepartment.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null}
        },
        new String [] {
            "Title 1", "Title 2", "Title 3", "Title 4", "Title 5"
        }
    ) {
        boolean[] canEdit = new boolean [] {
            true, true, true, true, false
        };

        public boolean isCellEditable(int rowIndex, int columnIndex) {
            return canEdit [columnIndex];
        }
    });
    tblDepartment.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            tblDepartmentMouseClicked(evt);
        }
    });
    tblDepartment.addHighlighter(new ColorHighlighter(HighlightPredicate.ROLLOVER_ROW,
        null, new Color(0, 0, 255)));
tblDepartment.setHighlighters(simpleStripHL);
tblDepartment.addHighlighter(new ColorHighlighter(HighlightPredicate.ROLLOVER_ROW,
    null, new Color(255, 102, 0)));
    jScrollPane7.setViewportView(tblDepartment);

    jPanel18.add(jScrollPane7, new org.netbeans.lib.awtextra.AbsoluteConstraints(34, 145, 643, 218));

    btnBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/Back-18.gif"))); // NOI18N
    btnBack.setActionCommand("back");
    btnBack.addActionListener(this);
    jPanel18.add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(617, 381, 60, 30));

    pnlDept.setBorder(javax.swing.BorderFactory.createTitledBorder("Department"));

    jPanel19.setMinimumSize(new java.awt.Dimension(170, 27));
    jPanel19.setPreferredSize(new java.awt.Dimension(170, 27));
    jPanel19.setLayout(new java.awt.GridLayout(1, 2, 4, 0));

    btnNewDept.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/add.png"))); // NOI18N
    btnNewDept.setText("New");
    btnNewDept.setActionCommand("newDept");
    btnNewDept.addActionListener(this);
    btnNewDept.setEnabled(false);
    jPanel19.add(btnNewDept);

    btnDeleteDept.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/delete.png"))); // NOI18N
    btnDeleteDept.setText("Delete");
    btnDeleteDept.setActionCommand("deleteDept");
    btnDeleteDept.addActionListener(this);
    btnDeleteDept.setEnabled(false);
    jPanel19.add(btnDeleteDept);

    txtName.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyReleased(java.awt.event.KeyEvent evt) {
            txtNameKeyReleased(evt);
        }
    });

    lblName.setText("Name");

    javax.swing.GroupLayout pnlDeptLayout = new javax.swing.GroupLayout(pnlDept);
    pnlDept.setLayout(pnlDeptLayout);
    pnlDeptLayout.setHorizontalGroup(
        pnlDeptLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(pnlDeptLayout.createSequentialGroup()
            .addGap(39, 39, 39)
            .addComponent(lblName, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(18, 18, 18)
            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(334, Short.MAX_VALUE))
        .addGroup(pnlDeptLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlDeptLayout.createSequentialGroup()
                .addContainerGap(350, Short.MAX_VALUE)
                .addComponent(jPanel19, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(101, 101, 101)))
    );
    pnlDeptLayout.setVerticalGroup(
        pnlDeptLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(pnlDeptLayout.createSequentialGroup()
            .addGap(33, 33, 33)
            .addGroup(pnlDeptLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(lblName))
            .addContainerGap(25, Short.MAX_VALUE))
        .addGroup(pnlDeptLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDeptLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jPanel19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE)))
    );

    jPanel18.add(pnlDept, new org.netbeans.lib.awtextra.AbsoluteConstraints(34, 24, -1, -1));

    javax.swing.GroupLayout departmentLayout = new javax.swing.GroupLayout(department);
    department.setLayout(departmentLayout);
    departmentLayout.setHorizontalGroup(
        departmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(departmentLayout.createSequentialGroup()
            .addComponent(jPanel18, javax.swing.GroupLayout.DEFAULT_SIZE, 715, Short.MAX_VALUE)
            .addContainerGap())
    );
    departmentLayout.setVerticalGroup(
        departmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(departmentLayout.createSequentialGroup()
            .addComponent(jPanel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addContainerGap())
    );

    tbpEmployee.addTab("Department", department);

    add(tbpEmployee, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 730, 450));
    }// </editor-fold>//GEN-END:initComponents

    private void txtNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNameKeyReleased
        // TODO add your handling code here:
        if (!Validator.isEmpty(txtName.getText())) {
            btnNewDept.setEnabled(true);
            btnDeleteDept.setEnabled(true);
        } else if (Validator.isEmpty(txtName.getText())) {
            btnNewDept.setEnabled(false);
            btnDeleteDept.setEnabled(false);
        }
    }//GEN-LAST:event_txtNameKeyReleased

    private void tblDepartmentMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDepartmentMouseClicked
        // TODO add your handling code here:
        int i = tblDepartment.getSelectedRow();
        if (i >= 0) {
            btnDeleteDept.setEnabled(true);
            txtName.setText(tblDepartment.getValueAt(i, 0).toString());
        }
    }//GEN-LAST:event_tblDepartmentMouseClicked

    private void tblEmployeeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblEmployeeMouseClicked
        // TODO add your handling code here:
        int i = tblEmployee.getSelectedRow();
        if (i >= 0) {
            ID = (long) tblEmployee.getValueAt(i, 0);
            btnUpdateEmp.setEnabled(true);
            btnDeleteEmp.setEnabled(true);
            btnDetailsEmp.setEnabled(true);
        }
    }//GEN-LAST:event_tblEmployeeMouseClicked

    private void txtSearchEmployeeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchEmployeeKeyReleased
        // TODO add your handling code here:
        if (!txtSearchEmployee.getText().equals("")) {
            loadData("search");
        } else {
            loadData("");
        }
    }//GEN-LAST:event_txtSearchEmployeeKeyReleased
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    public javax.swing.JButton btnDeleteDept;
    public javax.swing.JButton btnDeleteEmp;
    public javax.swing.JButton btnDetailsEmp;
    public javax.swing.JButton btnEmployeeReport;
    public javax.swing.JButton btnNewDept;
    public javax.swing.JButton btnNewEmp;
    private javax.swing.JButton btnNext;
    public javax.swing.JButton btnUpdateEmp;
    public javax.swing.JButton btnUpdateListEmployee;
    public javax.swing.JPanel department;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane7;
    public javax.swing.JLabel lblName;
    public javax.swing.JLabel lblSearchEmployee;
    public javax.swing.JPanel pnlDept;
    public javax.swing.JPanel pnlEmp;
    public org.jdesktop.swingx.JXTable tblDepartment;
    public org.jdesktop.swingx.JXTable tblEmployee;
    public javax.swing.JTabbedPane tbpEmployee;
    private javax.swing.JTextField txtName;
    private org.jdesktop.swingx.JXSearchField txtSearchEmployee;
    // End of variables declaration//GEN-END:variables
    static long ID;
    public void loadData(String type) {
        Locale locale = Locale.getDefault();
        ResourceBundle rb = ResourceBundle.getBundle(Main.baseName, locale);
        ArrayList list;
        String keyword = txtSearchEmployee.getText();
        if (type.equals("search") && !keyword.equals("")) {
            list = new EmployeeDAO().getList(keyword);
        } else {
            list = new Manager().getList("employee");
        }
        Vector vData = new Vector();
        Vector vColumn = new Vector();
        vColumn.removeAllElements();
        vColumn.add(rb.getString("empID"));
        vColumn.add(rb.getString("deptName"));
        vColumn.add(rb.getString("firstName"));
        vColumn.add(rb.getString("lastName"));
        vColumn.add(rb.getString("sex"));
        vColumn.add(rb.getString("dateOfBirth"));
        for (int i = 0; i < list.size(); i++) {
            Vector vRow = new Vector();
            Employee emp = (Employee) list.get(i);
            vRow.add(emp.getEmployeeID());
            vRow.add(emp.getDepartmentName());
            vRow.add(emp.getFirstName());
            vRow.add(emp.getLastName());
            String st;
            if (emp.isSex()) {
                st = rb.getString("male");
            } else {
                st = rb.getString("female");
            }
            vRow.add(st);
            Date d = emp.getDateOfBirth();
            d.setDate(d.getDate());
            SimpleDateFormat df = new SimpleDateFormat("dd/MM/yyyy");
            vRow.add(df.format(d));
            vData.add(vRow);
        }
        DefaultTableModel model = new DefaultTableModel(vData, vColumn);
        this.tblEmployee.setModel(model);
    }

    public void loadDepartmentData() {
         Locale locale = Locale.getDefault();
        ResourceBundle rb = ResourceBundle.getBundle(Main.baseName, locale);
        Vector vColumn = new Vector();
        Vector vData = new Vector();
        vColumn.removeAllElements();
        vColumn.add(rb.getString("deptName"));
        ArrayList list = new Manager().getList("department");
        for (int i = 0; i < list.size(); i++) {
            Vector vRow = new Vector();
            Department department = (Department) list.get(i);
            vRow.add(department.getDepartmentName());
            vData.add(vRow);
        }
        DefaultTableModel model = new DefaultTableModel(vData, vColumn);
        tblDepartment.setModel(model);
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        frmEmployee emp;
        switch (e.getActionCommand()) {
            case "newEmp":
                emp = new frmEmployee();
                emp.setTitle("Add new Employee");
                emp.setVisible(true);
                break;
            case "detailsEmp":
                emp = new frmEmployee();
                emp.btnAccept.setVisible(false);
                emp.btnBrowse.setVisible(false);
                emp.btnCancel.setVisible(false);
                emp.setTitle("View details");
                emp.setVisible(true);
                emp.loadData(ID);
                break;
            case "updateEmp":
                emp = new frmEmployee();
                emp.btnAccept.setActionCommand("update");
                emp.setTitle("Update informations");
                emp.btnAccept.setEnabled(true);
                emp.btnBrowse.setEnabled(true);
                emp.setVisible(true);
                emp.loadData(ID);
                break;
            case "deleteEmp":
                new Manager().delete(ID, "employee");
                break;
            case "newDept":
                new Manager().addNew(new Department(txtName.getText()), "department");
                loadDepartmentData();
                break;
            case "deleteDept":
                new Manager().delete(txtName.getText(), "department");
                loadDepartmentData();
                break;
            case "updateList":
                new Media(new File("chimes.wav").getAbsolutePath()).start();
                btnUpdateEmp.setEnabled(false);
                btnDeleteEmp.setEnabled(false);
                btnDetailsEmp.setEnabled(false);
                loadData("");
                break;
            case "next":
                tbpEmployee.setSelectedComponent(department);
                break;
            case "back":
                tbpEmployee.setSelectedComponent(pnlEmp);
                break;
            case "reportEmployee":
                new Utility().getReport("Employee");
                break;
        }
    }
}
