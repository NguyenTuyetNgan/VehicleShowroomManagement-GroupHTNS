/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import bll.Manager;
import dao.EmployeeDAO;
import dto.Department;
import dto.Employee;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.security.NoSuchAlgorithmException;
import java.sql.Date;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Locale;
import java.util.ResourceBundle;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.crypto.KeyGenerator;
import javax.crypto.SecretKey;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.text.JTextComponent;

/**
 *
 *
 */
public class frmEmployee extends javax.swing.JFrame implements ActionListener {

    /**
     * Creates new form frmUser
     */
    public frmEmployee() {
        initComponents();
        new Utility().setIcon("/resources/employeeGIF.gif", this, null);
        setLang(Main.baseName);
        setComboModel();
        btnBrowse.addActionListener(this);
        btnAccept.addActionListener(this);
        btnCancel.addActionListener(this);
        if (!new EmployeeDAO().getEmployee(Main.EmployeeID).getDepartmentName().equals("HR")) {
            cbxDepartmentName.setEnabled(false);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btgSex = new javax.swing.ButtonGroup();
        jPanel3 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        lblDept = new javax.swing.JLabel();
        cbxDepartmentName = new javax.swing.JComboBox();
        lblFirst = new javax.swing.JLabel();
        txtFirstName = new javax.swing.JTextField();
        lblLast = new javax.swing.JLabel();
        txtLastName = new javax.swing.JTextField();
        lblSex = new javax.swing.JLabel();
        rbnMale = new javax.swing.JRadioButton();
        rbnFemale = new javax.swing.JRadioButton();
        lblDateOfBirth = new javax.swing.JLabel();
        dpkBirthday = new org.jdesktop.swingx.JXDatePicker();
        lblPhone = new javax.swing.JLabel();
        txtPhone = new javax.swing.JTextField();
        pnlPhoto = new javax.swing.JPanel();
        lblPhoto = new javax.swing.JLabel();
        btnBrowse = new javax.swing.JButton();
        lblAddress = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txaAddress = new javax.swing.JTextArea();
        btnAccept = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        lblUserName = new javax.swing.JLabel();
        txtUserName = new javax.swing.JTextField();
        lblPasword = new javax.swing.JLabel();
        txtPassword = new javax.swing.JPasswordField();
        lblEmp = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Add new Employee");
        setBackground(new java.awt.Color(255, 255, 255));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(192, 192, 192)));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblDept.setText("Department");
        jPanel1.add(lblDept, new org.netbeans.lib.awtextra.AbsoluteConstraints(21, 98, -1, 21));

        cbxDepartmentName.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbxDepartmentName.setBorder(null);
        cbxDepartmentName.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbxDepartmentNameItemStateChanged(evt);
            }
        });
        jPanel1.add(cbxDepartmentName, new org.netbeans.lib.awtextra.AbsoluteConstraints(101, 98, 142, 21));

        lblFirst.setText("First Name");
        jPanel1.add(lblFirst, new org.netbeans.lib.awtextra.AbsoluteConstraints(21, 144, 57, -1));
        jPanel1.add(txtFirstName, new org.netbeans.lib.awtextra.AbsoluteConstraints(101, 141, 142, -1));

        lblLast.setText("Last Name");
        jPanel1.add(lblLast, new org.netbeans.lib.awtextra.AbsoluteConstraints(22, 179, 56, -1));
        jPanel1.add(txtLastName, new org.netbeans.lib.awtextra.AbsoluteConstraints(101, 179, 142, -1));

        lblSex.setText("Sex");
        jPanel1.add(lblSex, new org.netbeans.lib.awtextra.AbsoluteConstraints(22, 226, 56, -1));

        rbnMale.setBackground(new java.awt.Color(255, 255, 255));
        btgSex.add(rbnMale);
        rbnMale.setSelected(true);
        rbnMale.setText("Male");
        jPanel1.add(rbnMale, new org.netbeans.lib.awtextra.AbsoluteConstraints(101, 217, -1, -1));

        rbnFemale.setBackground(new java.awt.Color(255, 255, 255));
        btgSex.add(rbnFemale);
        rbnFemale.setText("Female");
        jPanel1.add(rbnFemale, new org.netbeans.lib.awtextra.AbsoluteConstraints(151, 217, -1, -1));

        lblDateOfBirth.setText("Date of Birth");
        jPanel1.add(lblDateOfBirth, new org.netbeans.lib.awtextra.AbsoluteConstraints(22, 262, -1, -1));

        dpkBirthday.setFormats("dd/MM/yyyy");
        Calendar cld = Calendar.getInstance();
        dpkBirthday.setDate(cld.getTime());
        jPanel1.add(dpkBirthday, new org.netbeans.lib.awtextra.AbsoluteConstraints(101, 258, 109, -1));

        lblPhone.setText("Phone");
        jPanel1.add(lblPhone, new org.netbeans.lib.awtextra.AbsoluteConstraints(22, 301, 61, -1));
        jPanel1.add(txtPhone, new org.netbeans.lib.awtextra.AbsoluteConstraints(101, 298, 171, -1));

        pnlPhoto.setBackground(new java.awt.Color(255, 255, 255));
        pnlPhoto.setBorder(javax.swing.BorderFactory.createTitledBorder("Photo"));
        pnlPhoto.setAutoscrolls(true);
        pnlPhoto.setLayout(new java.awt.BorderLayout());

        lblPhoto.setBackground(new java.awt.Color(255, 255, 255));
        lblPhoto.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        pnlPhoto.add(lblPhoto, java.awt.BorderLayout.CENTER);

        jPanel1.add(pnlPhoto, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 190, 180, 164));

        btnBrowse.setText("Browse");
        btnBrowse.setActionCommand("browse");
        jPanel1.add(btnBrowse, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 350, -1, -1));

        lblAddress.setText("Address");
        jPanel1.add(lblAddress, new org.netbeans.lib.awtextra.AbsoluteConstraints(22, 336, 61, -1));

        txaAddress.setColumns(20);
        txaAddress.setRows(5);
        jScrollPane1.setViewportView(txaAddress);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 360, 280, 90));

        btnAccept.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/OK-20.gif"))); // NOI18N
        btnAccept.setActionCommand("add");
        btnAccept.setText("Accept");
        btnAccept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAcceptActionPerformed(evt);
            }
        });
        jPanel1.add(btnAccept, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 420, -1, -1));

        btnCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/cancel.gif"))); // NOI18N
        btnCancel.setActionCommand("cancel");
        btnCancel.setText("Cancel");
        jPanel1.add(btnCancel, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 420, -1, -1));

        lblUserName.setText("UserName");
        jPanel1.add(lblUserName, new org.netbeans.lib.awtextra.AbsoluteConstraints(337, 101, -1, -1));

        txtUserName.setEditable(false);
        jPanel1.add(txtUserName, new org.netbeans.lib.awtextra.AbsoluteConstraints(404, 98, 133, -1));

        lblPasword.setText("Password");
        jPanel1.add(lblPasword, new org.netbeans.lib.awtextra.AbsoluteConstraints(337, 144, -1, -1));

        txtPassword.setEditable(false);
        jPanel1.add(txtPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(404, 141, 133, -1));

        lblEmp.setFont(new java.awt.Font("Tahoma", 1, 25)); // NOI18N
        lblEmp.setForeground(new java.awt.Color(0, 51, 255));
        lblEmp.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblEmp.setText("EMPLOYEE");
        jPanel1.add(lblEmp, new org.netbeans.lib.awtextra.AbsoluteConstraints(21, 12, 506, 55));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 600, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 565, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(29, Short.MAX_VALUE)))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 674, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 499, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(169, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        setSize(new java.awt.Dimension(603, 522));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cbxDepartmentNameItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbxDepartmentNameItemStateChanged
        // TODO add your handling code here:
        String str = (String) cbxDepartmentName.getSelectedItem();
        if (str.equals("HR") || str.equals("Sales") || str.equals("Car Manager")) {
            txtUserName.setEditable(true);
            txtPassword.setEditable(true);
        } else {
            txtUserName.setEditable(false);
            txtPassword.setEditable(false);
        }
    }//GEN-LAST:event_cbxDepartmentNameItemStateChanged

    private void btnAcceptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAcceptActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnAcceptActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmEmployee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmEmployee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmEmployee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmEmployee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                    new frmEmployee().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup btgSex;
    public javax.swing.JButton btnAccept;
    public javax.swing.JButton btnBrowse;
    public javax.swing.JButton btnCancel;
    private javax.swing.JComboBox cbxDepartmentName;
    private org.jdesktop.swingx.JXDatePicker dpkBirthday;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAddress;
    private javax.swing.JLabel lblDateOfBirth;
    private javax.swing.JLabel lblDept;
    private javax.swing.JLabel lblEmp;
    private javax.swing.JLabel lblFirst;
    private javax.swing.JLabel lblLast;
    private javax.swing.JLabel lblPasword;
    private javax.swing.JLabel lblPhone;
    private javax.swing.JLabel lblPhoto;
    private javax.swing.JLabel lblSex;
    private javax.swing.JLabel lblUserName;
    private javax.swing.JPanel pnlPhoto;
    private javax.swing.JRadioButton rbnFemale;
    private javax.swing.JRadioButton rbnMale;
    private javax.swing.JTextArea txaAddress;
    private javax.swing.JTextField txtFirstName;
    private javax.swing.JTextField txtLastName;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtPhone;
    private javax.swing.JTextField txtUserName;
    // End of variables declaration//GEN-END:variables
    private static String path;
    private static byte[] tempImage;
    SecretKey sKey;

    public void setLang(String baseName) {
        Locale locale = Locale.getDefault();
        ResourceBundle rb = ResourceBundle.getBundle(baseName, locale);
        lblEmp.setText(rb.getString("empInfor"));
        lblDept.setText(rb.getString("department"));
        lblFirst.setText(rb.getString("firstName"));
        lblLast.setText(rb.getString("lastName"));
        lblSex.setText(rb.getString("sex"));
        lblDateOfBirth.setText(rb.getString("dateOfBirth"));
        lblPhone.setText(rb.getString("phone"));
        lblAddress.setText(rb.getString("address"));
        lblUserName.setText(rb.getString("username"));
        lblPasword.setText(rb.getString("password"));
        pnlPhoto.setBorder(javax.swing.BorderFactory.createTitledBorder(rb.getString("photo")));
        btnBrowse.setText(rb.getString("browse"));
        btnAccept.setText("accept");
        btnCancel.setText("cancel");
    }

    public void loadData(long ID) {
        path = "";
        Employee emp = new EmployeeDAO().getEmployee(ID);
        tempImage = emp.getPhoto();
        cbxDepartmentName.setSelectedItem(emp.getDepartmentName());
        txtFirstName.setText(emp.getFirstName());
        txtLastName.setText(emp.getLastName());
        if (emp.isSex()) {
            rbnMale.setSelected(true);
        } else {
            rbnFemale.setSelected(true);
        }
        dpkBirthday.setDate(emp.getDateOfBirth());
        txtPhone.setText("0" + emp.getPhone());
        txaAddress.setText(emp.getAddress());
        lblPhoto.setIcon(new ImageIcon(emp.getPhoto()));
        txtUserName.setText(emp.getUserName());
        txtPassword.setText(emp.getPassword());
    }

    public void setComboModel() {
        ArrayList list = new Manager().getList("department");
        Vector data = new Vector();
        for (int i = 0; i < list.size(); i++) {
            Department dpt = (Department) list.get(i);
            data.add(dpt.getDepartmentName());
        }
        DefaultComboBoxModel model = new DefaultComboBoxModel(data);
        cbxDepartmentName.setModel(model);
    }

    public Employee getValue() {
        Employee employee = new Employee();
        employee.setEmployeeID(pnlEmployee.ID);
        employee.setFirstName(txtFirstName.getText());
        employee.setLastName(txtLastName.getText());
        boolean sex = false;
        if (rbnMale.isSelected()) {
            sex = true;
        }
        employee.setSex(sex);
        employee.setDateOfBirth(new Date(dpkBirthday.getDate().getTime()));
        employee.setPhone(Integer.parseInt(txtPhone.getText()));
        if (!path.equals("")) {
            try {
                File f = new File(path);
                FileInputStream in = new FileInputStream(f);
                byte[] photo = new byte[(int) f.length()];
                in.read(photo);
                employee.setPhoto(photo);
            } catch (FileNotFoundException ex) {
                Message.error("Can't find file images!\nPlease try again.");
                return null;
            } catch (IOException ex) {
                Message.error("Can't read the file!\nPlease try again.");
                return null;
            }
        } else {
            employee.setPhoto(tempImage);
        }
        employee.setAddress(txaAddress.getText());
        employee.setDepartmentName(cbxDepartmentName.getSelectedItem().toString());
        employee.setUserName(txtUserName.getText());
        employee.setPassword(String.valueOf(txtPassword.getPassword()));
        return employee;
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        JTextComponent[] tcp;
        String dpmName = cbxDepartmentName.getSelectedItem() + "";
        if (dpmName.equals("HR") || dpmName.equals("Sales") || dpmName.equals("Car Manager")) {
            JTextComponent[] temp = {txtFirstName, txtLastName, txaAddress, txtUserName, txtPassword};
            tcp = temp;
        } else {
            JTextComponent[] temp = {txtFirstName, txtLastName, txaAddress};
            tcp = temp;
        }
        switch (e.getActionCommand()) {
            case "add":
                if (!Validator.validateComponents(tcp) || !Validator.validatePhone(txtPhone) || !Validator.validateImage(lblPhoto)) {
                    return;
                }
                new Manager().addNew(getValue(), "employee");
                this.dispose();
                break;
            case "update":
                if (!Validator.validateComponents(tcp) || !Validator.validatePhone(txtPhone) || !Validator.validateImage(lblPhoto)) {
                    return;
                }
                new Manager().update(getValue(), "employee");
                this.dispose();
                break;
            case "updateProfile":
                if (!Validator.validateComponents(tcp) || !Validator.validatePhone(txtPhone) || !Validator.validateImage(lblPhoto)) {
                    return;
                }
                Employee emp = null;
                emp = getValue();
                emp.setEmployeeID(Main.EmployeeID);
                new Manager().update(emp, "employee");
                this.dispose();
                break;
            case "cancel":
                this.dispose();
                break;
            case "browse":
                path = SelectFile.selectImages();
                if (!path.equals("")) {
                    lblPhoto.setIcon(new ImageIcon(path));
                } else {
                    lblPhoto.setIcon(null);
                }
                break;
        }
    }
}
