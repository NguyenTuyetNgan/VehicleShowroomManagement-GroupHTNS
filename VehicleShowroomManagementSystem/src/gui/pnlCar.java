/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import bll.Manager;
import dao.CarDAO;
import dao.CarModelDAO;
import dao.CarReceiptDAO;
import dao.EmployeeDAO;
import dao.ManufactoryDAO;
import dao.PurchaseOrderDAO;
import dao.ServiceDAO;
import dto.Car;
import dto.CarModel;
import dto.CarReceipt;
import dto.Employee;
import dto.Manufactory;
import dto.PurchaseOrder;
import dto.Service;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.sql.Date;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Locale;
import java.util.ResourceBundle;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.JTextComponent;
import org.jdesktop.swingx.decorator.ColorHighlighter;
import org.jdesktop.swingx.decorator.HighlightPredicate;
import org.jdesktop.swingx.decorator.Highlighter;
import org.jdesktop.swingx.decorator.HighlighterFactory;

/**
 *
 * 
 */
public class pnlCar extends javax.swing.JPanel implements ActionListener {

    /**
     * Creates new form pnlCar
     */
    public pnlCar() {
        initComponents();
        loadCarData("");
        loadCarModels("");
        loadManufactory("");
        loadPurchaseOrder("");
        loadServices();
        loadCarReceipt("");
        JButton[] arrButton = {btnDetailsCar, btnDetailsModel, btnDetailsPurchase, btnDetailsReceipt, btnDetailsManufactory, btnUpdateManufactory, btnUpdateReceipt, btnUpdatePurchase, btnUpdateModel, btnUpdateCar, btnUpdateService, btnNewService, btnNewReceipt, btnNewPurchase,
            btnNewModel, btnNewManufactory, btnNewCar, btnDeleteService, btnDeleteReceipt,
            btnDeletePurchase, btnDeleteModel, btnDeleteManufactory, btnDeleteCar, btnUpdateListCar, btnUpdateListModels, btnUpdateListManufactory, btnUpdateListPurchase, btnUpdateListReceipt};
        if (!Main.DepartmentName.equals("Car Manager")) {
            new Utility().disableButton(arrButton);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        tbpCar = new javax.swing.JTabbedPane();
        pnlCar = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCar = new org.jdesktop.swingx.JXTable();
        txtSearchCar = new org.jdesktop.swingx.JXSearchField();
        jPanel7 = new javax.swing.JPanel();
        btnNewCar = new javax.swing.JButton();
        btnUpdateCar = new javax.swing.JButton();
        btnDeleteCar = new javax.swing.JButton();
        btnDetailsCar = new javax.swing.JButton();
        lblSearchCar = new javax.swing.JLabel();
        btnNext1 = new javax.swing.JButton();
        btnUpdateListCar = new javax.swing.JButton();
        btnReportCar = new javax.swing.JButton();
        pnlModel = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblModels = new org.jdesktop.swingx.JXTable();
        txtSearchName = new org.jdesktop.swingx.JXSearchField();
        jPanel9 = new javax.swing.JPanel();
        btnNewModel = new javax.swing.JButton();
        btnUpdateModel = new javax.swing.JButton();
        btnDeleteModel = new javax.swing.JButton();
        btnDetailsModel = new javax.swing.JButton();
        lblSearchModel = new javax.swing.JLabel();
        btnBack1 = new javax.swing.JButton();
        btnNext2 = new javax.swing.JButton();
        btnUpdateListModels = new javax.swing.JButton();
        pnlService = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblServices = new org.jdesktop.swingx.JXTable();
        btnBack2 = new javax.swing.JButton();
        btnNext3 = new javax.swing.JButton();
        pnlServiceInfor = new javax.swing.JPanel();
        lblNameService = new javax.swing.JLabel();
        txtServiceName = new javax.swing.JTextField();
        jPanel11 = new javax.swing.JPanel();
        btnNewService = new javax.swing.JButton();
        btnUpdateService = new javax.swing.JButton();
        btnDeleteService = new javax.swing.JButton();
        lblDescriptService = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        txaDescription = new javax.swing.JTextArea();
        pnlPurchaseOrder = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblOrder = new org.jdesktop.swingx.JXTable();
        btnBack3 = new javax.swing.JButton();
        btnNext4 = new javax.swing.JButton();
        jPanel15 = new javax.swing.JPanel();
        btnNewPurchase = new javax.swing.JButton();
        btnUpdatePurchase = new javax.swing.JButton();
        btnDeletePurchase = new javax.swing.JButton();
        btnDetailsPurchase = new javax.swing.JButton();
        btnUpdateListPurchase = new javax.swing.JButton();
        dpkPurchase = new org.jdesktop.swingx.JXDatePicker();
        cbxShowPurchase = new javax.swing.JCheckBox();
        pickOrder = new javax.swing.JLabel();
        btnReportPurchase = new javax.swing.JButton();
        pnlReceipt = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tblReceipt = new org.jdesktop.swingx.JXTable();
        btnBack4 = new javax.swing.JButton();
        btnNext5 = new javax.swing.JButton();
        jPanel18 = new javax.swing.JPanel();
        btnNewReceipt = new javax.swing.JButton();
        btnUpdateReceipt = new javax.swing.JButton();
        btnDeleteReceipt = new javax.swing.JButton();
        btnDetailsReceipt = new javax.swing.JButton();
        btnUpdateListReceipt = new javax.swing.JButton();
        cbxShowReceipt = new javax.swing.JCheckBox();
        dpkPickReceipt = new org.jdesktop.swingx.JXDatePicker();
        pickReceipt = new javax.swing.JLabel();
        pnlManufactory = new javax.swing.JPanel();
        jPanel16 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        tblManufactory = new org.jdesktop.swingx.JXTable();
        txtSearchManufactory = new org.jdesktop.swingx.JXSearchField();
        jPanel17 = new javax.swing.JPanel();
        btnNewManufactory = new javax.swing.JButton();
        btnUpdateManufactory = new javax.swing.JButton();
        btnDeleteManufactory = new javax.swing.JButton();
        btnDetailsManufactory = new javax.swing.JButton();
        lblSearchManufactory = new javax.swing.JLabel();
        btnBack5 = new javax.swing.JButton();
        btnUpdateListManufactory = new javax.swing.JButton();
        btnManufactoryReport = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pnlCar.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblCar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, true, true, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Highlighter simpleStripHL = HighlighterFactory.createSimpleStriping();
        tblCar.addHighlighter(new ColorHighlighter(HighlightPredicate.ROLLOVER_ROW,
            null, new Color(0, 0, 255)));
    tblCar.setHighlighters(simpleStripHL);
    tblCar.addHighlighter(new ColorHighlighter(HighlightPredicate.ROLLOVER_ROW,
        null, new Color(255, 102, 0)));
tblCar.addMouseListener(new java.awt.event.MouseAdapter() {
    public void mouseClicked(java.awt.event.MouseEvent evt) {
        tblCarMouseClicked(evt);
    }
    });
    jScrollPane1.setViewportView(tblCar);

    pnlCar.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 680, 270));

    txtSearchCar.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyReleased(java.awt.event.KeyEvent evt) {
            txtSearchCarKeyReleased(evt);
        }
    });
    pnlCar.add(txtSearchCar, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 72, 210, 20));

    jPanel7.setLayout(new java.awt.GridLayout(1, 0, 5, 0));

    btnNewCar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/add.png"))); // NOI18N
    btnNewCar.setText("New");
    btnNewCar.setActionCommand("newCar");
    btnNewCar.addActionListener(this);
    jPanel7.add(btnNewCar);

    btnUpdateCar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/update.png"))); // NOI18N
    btnUpdateCar.setText("Update");
    btnUpdateCar.setEnabled(false);
    btnUpdateCar.setActionCommand("updateCar");
    btnUpdateCar.addActionListener(this);
    jPanel7.add(btnUpdateCar);

    btnDeleteCar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/delete.png"))); // NOI18N
    btnDeleteCar.setText("Delete");
    btnDeleteCar.setEnabled(false);
    btnDeleteCar.setActionCommand("deleteCar");
    btnDeleteCar.addActionListener(this);
    jPanel7.add(btnDeleteCar);

    btnDetailsCar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/about_16.png"))); // NOI18N
    btnDetailsCar.setText("Details");
    btnDetailsCar.setEnabled(false);
    btnDetailsCar.setActionCommand("detailsCar");
    btnDetailsCar.addActionListener(this);
    jPanel7.add(btnDetailsCar);

    pnlCar.add(jPanel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 60, 400, 30));

    lblSearchCar.setForeground(new java.awt.Color(51, 51, 51));
    lblSearchCar.setText("Search Car Name or Model Name");
    pnlCar.add(lblSearchCar, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 44, -1, 25));

    btnNext1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/Next-18.gif"))); // NOI18N
    btnNext1.setActionCommand("next");
    btnNext1.addActionListener(this);
    pnlCar.add(btnNext1, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 380, 60, 30));

    btnUpdateListCar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/update.png"))); // NOI18N
    btnUpdateListCar.setText("Update List");
    btnUpdateListCar.setActionCommand("updateListCar");
    btnUpdateListCar.addActionListener(this);
    pnlCar.add(btnUpdateListCar, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 380, -1, 30));

    btnReportCar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/Script20x20.gif"))); // NOI18N
    btnReportCar.setText("Report");
    btnReportCar.setActionCommand("reportCar");
    btnReportCar.addActionListener(this);
    pnlCar.add(btnReportCar, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 380, -1, 30));

    tbpCar.addTab("Car", pnlCar);

    pnlModel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

    jPanel8.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

    tblModels.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null}
        },
        new String [] {
            "Title 1", "Title 2", "Title 3", "Title 4", "Title 5"
        }
    ) {
        boolean[] canEdit = new boolean [] {
            true, true, true, true, false
        };

        public boolean isCellEditable(int rowIndex, int columnIndex) {
            return canEdit [columnIndex];
        }
    });
    tblModels.addHighlighter(new ColorHighlighter(HighlightPredicate.ROLLOVER_ROW,
        null, new Color(0, 0, 255)));
tblModels.setHighlighters(simpleStripHL);
tblModels.addHighlighter(new ColorHighlighter(HighlightPredicate.ROLLOVER_ROW,
    null, new Color(255, 102, 0)));
    tblModels.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            tblModelsMouseClicked(evt);
        }
    });
    jScrollPane2.setViewportView(tblModels);

    jPanel8.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(11, 92, 680, 264));

    txtSearchName.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyReleased(java.awt.event.KeyEvent evt) {
            txtSearchNameKeyReleased(evt);
        }
    });
    jPanel8.add(txtSearchName, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 61, 210, 20));

    jPanel9.setLayout(new java.awt.GridLayout(1, 0, 5, 0));

    btnNewModel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/add.png"))); // NOI18N
    btnNewModel.setText("New");
    btnNewModel.setActionCommand("newModel");
    btnNewModel.addActionListener(this);
    jPanel9.add(btnNewModel);

    btnUpdateModel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/update.png"))); // NOI18N
    btnUpdateModel.setText("Update");
    btnUpdateModel.setActionCommand("updateModel");
    btnUpdateModel.addActionListener(this);
    btnUpdateModel.setEnabled(false);
    btnUpdateModel.setMaximumSize(new java.awt.Dimension(73, 25));
    btnUpdateModel.setMinimumSize(new java.awt.Dimension(73, 25));
    jPanel9.add(btnUpdateModel);

    btnDeleteModel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/delete.png"))); // NOI18N
    btnDeleteModel.setText("Delete");
    btnDeleteModel.setActionCommand("deleteModel");
    btnDeleteModel.addActionListener(this);
    btnDeleteModel.setEnabled(false);
    btnDeleteModel.setMaximumSize(new java.awt.Dimension(73, 25));
    btnDeleteModel.setMinimumSize(new java.awt.Dimension(73, 25));
    jPanel9.add(btnDeleteModel);

    btnDetailsModel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/about_16.png"))); // NOI18N
    btnDetailsModel.setText("Details");
    btnDetailsModel.setActionCommand("detailsModel");
    btnDetailsModel.addActionListener(this);
    btnDetailsModel.setEnabled(false);
    btnDetailsModel.setMaximumSize(new java.awt.Dimension(73, 25));
    btnDetailsModel.setMinimumSize(new java.awt.Dimension(73, 25));
    jPanel9.add(btnDetailsModel);

    jPanel8.add(jPanel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 51, 401, 30));

    lblSearchModel.setForeground(new java.awt.Color(51, 51, 51));
    lblSearchModel.setText("Search Model Name");
    jPanel8.add(lblSearchModel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 41, -1, -1));

    btnBack1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/Back-18.gif"))); // NOI18N
    btnBack1.setActionCommand("back");
    btnBack1.addActionListener(this);
    jPanel8.add(btnBack1, new org.netbeans.lib.awtextra.AbsoluteConstraints(563, 366, 60, 30));

    btnNext2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/Next-18.gif"))); // NOI18N
    btnNext2.setActionCommand("next");
    btnNext2.addActionListener(this);
    jPanel8.add(btnNext2, new org.netbeans.lib.awtextra.AbsoluteConstraints(629, 366, 60, 30));

    btnUpdateListModels.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/update.png"))); // NOI18N
    btnUpdateListModels.setText("Update List");
    btnUpdateListModels.setActionCommand("updateListModels");
    btnUpdateListModels.addActionListener(this);
    jPanel8.add(btnUpdateListModels, new org.netbeans.lib.awtextra.AbsoluteConstraints(435, 366, 110, 30));

    pnlModel.add(jPanel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 11, -1, 403));

    tbpCar.addTab("Models", pnlModel);

    pnlService.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

    jPanel10.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

    tblServices.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null}
        },
        new String [] {
            "Title 1", "Title 2", "Title 3", "Title 4", "Title 5"
        }
    ) {
        boolean[] canEdit = new boolean [] {
            true, true, true, true, false
        };

        public boolean isCellEditable(int rowIndex, int columnIndex) {
            return canEdit [columnIndex];
        }
    });
    tblServices.addHighlighter(new ColorHighlighter(HighlightPredicate.ROLLOVER_ROW,
        null, new Color(0, 0, 255)));
tblServices.setHighlighters(simpleStripHL);
tblServices.addHighlighter(new ColorHighlighter(HighlightPredicate.ROLLOVER_ROW,
    null, new Color(255, 102, 0)));
    tblServices.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            tblServicesMouseClicked(evt);
        }
    });
    jScrollPane3.setViewportView(tblServices);

    jPanel10.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 211, 680, 161));

    btnBack2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/Back-18.gif"))); // NOI18N
    btnBack2.setActionCommand("back");
    btnBack2.addActionListener(this);
    jPanel10.add(btnBack2, new org.netbeans.lib.awtextra.AbsoluteConstraints(561, 378, 60, 30));

    btnNext3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/Next-18.gif"))); // NOI18N
    btnNext3.setActionCommand("next");
    btnNext3.addActionListener(this);
    jPanel10.add(btnNext3, new org.netbeans.lib.awtextra.AbsoluteConstraints(631, 378, 60, 30));

    pnlServiceInfor.setBorder(javax.swing.BorderFactory.createTitledBorder("Service's Information"));

    lblNameService.setText("Name");

    txtServiceName.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyReleased(java.awt.event.KeyEvent evt) {
            txtServiceNameKeyReleased(evt);
        }
    });

    jPanel11.setLayout(new java.awt.GridLayout(1, 3, 5, 0));

    btnNewService.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/add.png"))); // NOI18N
    btnNewService.setText("New");
    btnNewService.setMaximumSize(new java.awt.Dimension(25, 25));
    btnNewService.setMinimumSize(null);
    btnNewService.setActionCommand("newService");
    btnNewService.addActionListener(this);
    jPanel11.add(btnNewService);

    btnUpdateService.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/update.png"))); // NOI18N
    btnUpdateService.setText("Update");
    btnUpdateService.setEnabled(false);
    btnUpdateService.setMaximumSize(new java.awt.Dimension(25, 25));
    btnUpdateService.setMinimumSize(null);
    btnUpdateService.setActionCommand("updateService");
    btnUpdateService.addActionListener(this);
    jPanel11.add(btnUpdateService);

    btnDeleteService.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/delete.png"))); // NOI18N
    btnDeleteService.setText("Delete");
    btnDeleteService.setEnabled(false);
    btnDeleteService.setMaximumSize(new java.awt.Dimension(25, 25));
    btnDeleteService.setMinimumSize(null);
    btnDeleteService.setActionCommand("deleteService");
    btnDeleteService.addActionListener(this);
    jPanel11.add(btnDeleteService);

    lblDescriptService.setText("Description");

    txaDescription.setColumns(20);
    txaDescription.setRows(5);
    jScrollPane7.setViewportView(txaDescription);

    javax.swing.GroupLayout pnlServiceInforLayout = new javax.swing.GroupLayout(pnlServiceInfor);
    pnlServiceInfor.setLayout(pnlServiceInforLayout);
    pnlServiceInforLayout.setHorizontalGroup(
        pnlServiceInforLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(pnlServiceInforLayout.createSequentialGroup()
            .addGap(179, 179, 179)
            .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlServiceInforLayout.createSequentialGroup()
            .addContainerGap(79, Short.MAX_VALUE)
            .addComponent(lblNameService)
            .addGap(40, 40, 40)
            .addComponent(txtServiceName, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(34, 34, 34)
            .addComponent(lblDescriptService)
            .addGap(18, 18, 18)
            .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(48, 48, 48))
    );
    pnlServiceInforLayout.setVerticalGroup(
        pnlServiceInforLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(pnlServiceInforLayout.createSequentialGroup()
            .addGroup(pnlServiceInforLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnlServiceInforLayout.createSequentialGroup()
                    .addGap(33, 33, 33)
                    .addGroup(pnlServiceInforLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtServiceName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblNameService)
                        .addComponent(lblDescriptService))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlServiceInforLayout.createSequentialGroup()
                    .addContainerGap(26, Short.MAX_VALUE)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)))
            .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap())
    );

    jPanel10.add(pnlServiceInfor, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 25, -1, -1));

    pnlService.add(jPanel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(14, 6, -1, -1));

    tbpCar.addTab("Services", pnlService);

    pnlPurchaseOrder.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

    jPanel12.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

    tblOrder.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null}
        },
        new String [] {
            "Title 1", "Title 2", "Title 3", "Title 4", "Title 5"
        }
    ) {
        boolean[] canEdit = new boolean [] {
            true, true, true, true, false
        };

        public boolean isCellEditable(int rowIndex, int columnIndex) {
            return canEdit [columnIndex];
        }
    });
    tblOrder.addHighlighter(new ColorHighlighter(HighlightPredicate.ROLLOVER_ROW,
        null, new Color(0, 0, 255)));
tblOrder.setHighlighters(simpleStripHL);
tblOrder.addHighlighter(new ColorHighlighter(HighlightPredicate.ROLLOVER_ROW,
    null, new Color(255, 102, 0)));
    tblOrder.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            tblOrderMouseClicked(evt);
        }
    });
    jScrollPane4.setViewportView(tblOrder);

    jPanel12.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 73, 659, 270));

    btnBack3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/Back-18.gif"))); // NOI18N
    btnBack3.setActionCommand("back");
    btnBack3.addActionListener(this);
    jPanel12.add(btnBack3, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 354, 60, 30));

    btnNext4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/Next-18.gif"))); // NOI18N
    btnNext4.setActionCommand("next");
    btnNext4.addActionListener(this);
    jPanel12.add(btnNext4, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 354, 60, 30));

    jPanel15.setLayout(new java.awt.GridLayout(1, 0, 5, 0));

    btnNewPurchase.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/add.png"))); // NOI18N
    btnNewPurchase.setText("New");
    btnNewPurchase.setActionCommand("newPurchase");
    btnNewPurchase.addActionListener(this);
    jPanel15.add(btnNewPurchase);

    btnUpdatePurchase.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/update.png"))); // NOI18N
    btnUpdatePurchase.setText("Update");
    btnUpdatePurchase.setEnabled(false);
    btnUpdatePurchase.setActionCommand("updatePurchase");
    btnUpdatePurchase.addActionListener(this);
    jPanel15.add(btnUpdatePurchase);

    btnDeletePurchase.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/delete.png"))); // NOI18N
    btnDeletePurchase.setText("Delete");
    btnDeletePurchase.setEnabled(false);
    btnDeletePurchase.setActionCommand("deletePurchase");
    btnDeletePurchase.addActionListener(this);
    jPanel15.add(btnDeletePurchase);

    btnDetailsPurchase.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/about_16.png"))); // NOI18N
    btnDetailsPurchase.setText("Details");
    btnDetailsPurchase.setEnabled(false);
    btnDetailsPurchase.setActionCommand("detailsPurchase");
    btnDetailsPurchase.addActionListener(this);
    jPanel15.add(btnDetailsPurchase);

    jPanel12.add(jPanel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 35, 400, 30));

    btnUpdateListPurchase.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/update.png"))); // NOI18N
    btnUpdateListPurchase.setText("Update List");
    btnUpdateListPurchase.setActionCommand("updateListPurchase");
    btnUpdateListPurchase.addActionListener(this);
    jPanel12.add(btnUpdateListPurchase, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 355, 110, 30));

    dpkPurchase.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            dpkPurchaseActionPerformed(evt);
        }
    });
    dpkPurchase.setFormats("yyy-MM-dd");
    jPanel12.add(dpkPurchase, new org.netbeans.lib.awtextra.AbsoluteConstraints(74, 39, 110, -1));

    cbxShowPurchase.setText("Show All");
    cbxShowPurchase.addItemListener(new java.awt.event.ItemListener() {
        public void itemStateChanged(java.awt.event.ItemEvent evt) {
            cbxShowPurchaseItemStateChanged(evt);
        }
    });
    jPanel12.add(cbxShowPurchase, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 35, -1, 30));

    pickOrder.setText("Pick a day");
    jPanel12.add(pickOrder, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 35, 60, 30));

    btnReportPurchase.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/Script20x20.gif"))); // NOI18N
    btnReportPurchase.setText("Report");
    btnReportPurchase.setEnabled(false);
    btnReportPurchase.setActionCommand("reportPurchase");
    btnReportPurchase.addActionListener(this);
    jPanel12.add(btnReportPurchase, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 355, -1, 30));

    pnlPurchaseOrder.add(jPanel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(24, 29, -1, -1));

    tbpCar.addTab("Purchase Order", pnlPurchaseOrder);

    pnlReceipt.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

    jPanel14.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

    tblReceipt.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null}
        },
        new String [] {
            "Title 1", "Title 2", "Title 3", "Title 4", "Title 5"
        }
    ) {
        boolean[] canEdit = new boolean [] {
            true, true, true, true, false
        };

        public boolean isCellEditable(int rowIndex, int columnIndex) {
            return canEdit [columnIndex];
        }
    });
    tblReceipt.addHighlighter(new ColorHighlighter(HighlightPredicate.ROLLOVER_ROW,
        null, new Color(0, 0, 255)));
tblReceipt.setHighlighters(simpleStripHL);
tblReceipt.addHighlighter(new ColorHighlighter(HighlightPredicate.ROLLOVER_ROW,
    null, new Color(255, 102, 0)));
    tblReceipt.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            tblReceiptMouseClicked(evt);
        }
    });
    jScrollPane5.setViewportView(tblReceipt);

    jPanel14.add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(11, 79, 680, 292));

    btnBack4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/Back-18.gif"))); // NOI18N
    btnBack4.setActionCommand("back");
    btnBack4.addActionListener(this);
    jPanel14.add(btnBack4, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 377, 60, 30));

    btnNext5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/Next-18.gif"))); // NOI18N
    btnNext5.setActionCommand("next");
    btnNext5.addActionListener(this);
    jPanel14.add(btnNext5, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 377, 60, 30));

    jPanel18.setLayout(new java.awt.GridLayout(1, 0, 5, 0));

    btnNewReceipt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/add.png"))); // NOI18N
    btnNewReceipt.setText("New");
    btnNewReceipt.setActionCommand("newReceipt");
    btnNewReceipt.addActionListener(this);
    jPanel18.add(btnNewReceipt);

    btnUpdateReceipt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/update.png"))); // NOI18N
    btnUpdateReceipt.setText("Update");
    btnUpdateReceipt.setEnabled(false);
    btnUpdateReceipt.setActionCommand("updateReceipt");
    btnUpdateReceipt.addActionListener(this);
    jPanel18.add(btnUpdateReceipt);

    btnDeleteReceipt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/delete.png"))); // NOI18N
    btnDeleteReceipt.setText("Delete");
    btnDeleteReceipt.setEnabled(false);
    btnDeleteReceipt.setActionCommand("deleteReceipt");
    btnDeleteReceipt.addActionListener(this);
    jPanel18.add(btnDeleteReceipt);

    btnDetailsReceipt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/about_16.png"))); // NOI18N
    btnDetailsReceipt.setText("Details");
    btnDetailsReceipt.setEnabled(false);
    btnDetailsReceipt.setActionCommand("detailsReceipt");
    btnDetailsReceipt.addActionListener(this);
    jPanel18.add(btnDetailsReceipt);

    jPanel14.add(jPanel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(292, 38, 400, 30));

    btnUpdateListReceipt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/update.png"))); // NOI18N
    btnUpdateListReceipt.setText("Update List");
    btnUpdateListReceipt.setActionCommand("updateListReceipt");
    btnUpdateListReceipt.addActionListener(this);
    jPanel14.add(btnUpdateListReceipt, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 377, 110, 30));

    cbxShowReceipt.setText("Show All");
    cbxShowReceipt.addItemListener(new java.awt.event.ItemListener() {
        public void itemStateChanged(java.awt.event.ItemEvent evt) {
            cbxShowReceiptItemStateChanged(evt);
        }
    });
    jPanel14.add(cbxShowReceipt, new org.netbeans.lib.awtextra.AbsoluteConstraints(209, 28, -1, 48));

    dpkPickReceipt.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            dpkPickReceiptActionPerformed(evt);
        }
    });
    dpkPickReceipt.setFormats("yyy-MM-dd");
    jPanel14.add(dpkPickReceipt, new org.netbeans.lib.awtextra.AbsoluteConstraints(73, 41, 130, -1));

    pickReceipt.setText("Pick a day");
    jPanel14.add(pickReceipt, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 42, 60, 20));

    pnlReceipt.add(jPanel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 6, -1, -1));

    tbpCar.addTab("Receipt", pnlReceipt);

    jPanel16.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

    tblManufactory.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null}
        },
        new String [] {
            "Title 1", "Title 2", "Title 3", "Title 4", "Title 5"
        }
    ) {
        boolean[] canEdit = new boolean [] {
            true, true, true, true, false
        };

        public boolean isCellEditable(int rowIndex, int columnIndex) {
            return canEdit [columnIndex];
        }
    });
    tblManufactory.addHighlighter(new ColorHighlighter(HighlightPredicate.ROLLOVER_ROW,
        null, new Color(0, 0, 255)));
tblManufactory.setHighlighters(simpleStripHL);
tblManufactory.addHighlighter(new ColorHighlighter(HighlightPredicate.ROLLOVER_ROW,
    null, new Color(255, 102, 0)));
    tblManufactory.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            tblManufactoryMouseClicked(evt);
        }
    });
    jScrollPane6.setViewportView(tblManufactory);

    jPanel16.add(jScrollPane6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 680, 270));

    txtSearchManufactory.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyReleased(java.awt.event.KeyEvent evt) {
            txtSearchManufactoryKeyReleased(evt);
        }
    });
    jPanel16.add(txtSearchManufactory, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 72, 210, 20));

    jPanel17.setLayout(new java.awt.GridLayout(1, 4, 5, 0));

    btnNewManufactory.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/add.png"))); // NOI18N
    btnNewManufactory.setText("New");
    btnNewManufactory.setActionCommand("newManufactory");
    btnNewManufactory.addActionListener(this);
    jPanel17.add(btnNewManufactory);

    btnUpdateManufactory.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/update.png"))); // NOI18N
    btnUpdateManufactory.setText("Update");
    btnUpdateManufactory.setEnabled(false);
    btnUpdateManufactory.setActionCommand("updateManufactory");
    btnUpdateManufactory.addActionListener(this);
    jPanel17.add(btnUpdateManufactory);

    btnDeleteManufactory.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/delete.png"))); // NOI18N
    btnDeleteManufactory.setText("Delete");
    btnDeleteManufactory.setEnabled(false);
    btnDeleteManufactory.setActionCommand("deleteManufactory");
    btnDeleteManufactory.addActionListener(this);
    jPanel17.add(btnDeleteManufactory);

    btnDetailsManufactory.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/about_16.png"))); // NOI18N
    btnDetailsManufactory.setText("Details");
    btnDetailsManufactory.setEnabled(false);
    btnDetailsManufactory.setActionCommand("detailsManufactory");
    btnDetailsManufactory.addActionListener(this);
    jPanel17.add(btnDetailsManufactory);

    jPanel16.add(jPanel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 60, 400, 30));

    lblSearchManufactory.setForeground(new java.awt.Color(51, 51, 51));
    lblSearchManufactory.setText("Search Manufacoty Name");
    jPanel16.add(lblSearchManufactory, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 44, -1, 30));

    btnBack5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/Back-18.gif"))); // NOI18N
    btnBack5.setActionCommand("back");
    btnBack5.addActionListener(this);
    jPanel16.add(btnBack5, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 380, 60, 30));

    btnUpdateListManufactory.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/update.png"))); // NOI18N
    btnUpdateListManufactory.setText("Update List");
    btnUpdateListManufactory.setActionCommand("updateListManufactory");
    btnUpdateListManufactory.addActionListener(this);
    jPanel16.add(btnUpdateListManufactory, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 380, 110, 30));

    btnManufactoryReport.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/Script20x20.gif"))); // NOI18N
    btnManufactoryReport.setText("Report");
    btnManufactoryReport.setActionCommand("reportManufactory");
    btnManufactoryReport.addActionListener(this);
    jPanel16.add(btnManufactoryReport, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 380, -1, 30));

    javax.swing.GroupLayout pnlManufactoryLayout = new javax.swing.GroupLayout(pnlManufactory);
    pnlManufactory.setLayout(pnlManufactoryLayout);
    pnlManufactoryLayout.setHorizontalGroup(
        pnlManufactoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGap(0, 725, Short.MAX_VALUE)
        .addGroup(pnlManufactoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlManufactoryLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, 725, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE)))
    );
    pnlManufactoryLayout.setVerticalGroup(
        pnlManufactoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGap(0, 425, Short.MAX_VALUE)
        .addGroup(pnlManufactoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlManufactoryLayout.createSequentialGroup()
                .addGap(0, 1, Short.MAX_VALUE)
                .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, 422, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 2, Short.MAX_VALUE)))
    );

    tbpCar.addTab("Manufactory", pnlManufactory);

    add(tbpCar, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 730, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void tblModelsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblModelsMouseClicked
        // TODO add your handling code here:
        int i = tblModels.getSelectedRow();
        if (i >= 0) {
            btnNewModel.setEnabled(true);
            btnUpdateModel.setEnabled(true);
            btnDeleteModel.setEnabled(true);
            btnDetailsModel.setEnabled(true);
            frmCarModel.ManufactoryName = tblModels.getValueAt(i, 1) + "";
            ModelName = tblModels.getValueAt(i, 0).toString();
        }
    }//GEN-LAST:event_tblModelsMouseClicked

    private void tblCarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblCarMouseClicked
        // TODO add your handling code here:
        int i = tblCar.getSelectedRow();
        if (i >= 0) {
            btnUpdateCar.setEnabled(true);
            btnDeleteCar.setEnabled(true);
            btnDetailsCar.setEnabled(true);
            CarNo = (long) tblCar.getValueAt(i, 0);
        }
    }//GEN-LAST:event_tblCarMouseClicked

    private void tblServicesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblServicesMouseClicked
        // TODO add your handling code here:
        int i = tblServices.getSelectedRow();
        if (i >= 0) {
            btnUpdateService.setEnabled(true);
            btnDeleteService.setEnabled(true);
            ServiceID = (int) tblServices.getValueAt(i, 0);
            setServiceData(ServiceID);
        }

    }//GEN-LAST:event_tblServicesMouseClicked

    private void tblOrderMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblOrderMouseClicked
        // TODO add your handling code here:
        int i = tblOrder.getSelectedRow();
        if (i >= 0) {
            btnUpdatePurchase.setEnabled(true);
            btnUpdatePurchase.setEnabled(true);
            btnDeletePurchase.setEnabled(true);
            btnDetailsPurchase.setEnabled(true);
            PurchaseOrderID = (long) tblOrder.getValueAt(i, 0);
            btnReportPurchase.setEnabled(true);
            EmployeeName = tblOrder.getValueAt(i, 1) + "";
        }
    }//GEN-LAST:event_tblOrderMouseClicked

    private void tblReceiptMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblReceiptMouseClicked
        // TODO add your handling code here:
        int i = tblReceipt.getSelectedRow();
        if (i >= 0) {
            btnUpdateReceipt.setEnabled(true);
            btnDeleteReceipt.setEnabled(true);
            btnDetailsReceipt.setEnabled(true);
            ReceiptID = (long) tblReceipt.getValueAt(i, 0);
            EmployeeName = tblReceipt.getValueAt(i, 2) + "";

        }
    }//GEN-LAST:event_tblReceiptMouseClicked

    private void tblManufactoryMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblManufactoryMouseClicked
        // TODO add your handling code here:
        int i = tblManufactory.getSelectedRow();
        if (i >= 0) {
            btnUpdateManufactory.setEnabled(true);
            btnDeleteManufactory.setEnabled(true);
            btnDetailsManufactory.setEnabled(true);
            ManufactoryID = (int) tblManufactory.getValueAt(i, 0);
        }
    }//GEN-LAST:event_tblManufactoryMouseClicked

    private void cbxShowReceiptItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbxShowReceiptItemStateChanged
        // TODO add your handling code here:
        if (cbxShowReceipt.isSelected()) {
            loadCarReceipt("");
        } else {
            loadCarReceipt("search");
        }
    }//GEN-LAST:event_cbxShowReceiptItemStateChanged

    private void dpkPickReceiptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dpkPickReceiptActionPerformed
        // TODO add your handling code here:
        if (dpkPickReceipt.getDate() != null) {
            loadCarReceipt("search");
        } else {
            loadCarReceipt("");
        }
        btnUpdateReceipt.setEnabled(false);
        btnDeleteReceipt.setEnabled(false);
        btnDetailsReceipt.setEnabled(false);
    }//GEN-LAST:event_dpkPickReceiptActionPerformed

    private void dpkPurchaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dpkPurchaseActionPerformed
        // TODO add your handling code here:
        if (dpkPurchase.getDate() != null) {
            loadPurchaseOrder("search");
        } else {
            loadPurchaseOrder("");
        }
        btnUpdatePurchase.setEnabled(false);
        btnDeletePurchase.setEnabled(false);
        btnDetailsPurchase.setEnabled(false);
    }//GEN-LAST:event_dpkPurchaseActionPerformed

    private void cbxShowPurchaseItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbxShowPurchaseItemStateChanged
        // TODO add your handling code here:
        if (cbxShowPurchase.isSelected()) {
            loadPurchaseOrder("");
        } else {
            loadPurchaseOrder("search");
        }
    }//GEN-LAST:event_cbxShowPurchaseItemStateChanged

    private void txtSearchCarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchCarKeyReleased
        // TODO add your handling code here:
        if (!txtSearchCar.getText().equals("")) {
            loadCarData("search");
        } else {
            loadCarData("");
        }
        btnUpdateCar.setEnabled(false);
        btnDeleteCar.setEnabled(false);
        btnDetailsCar.setEnabled(false);
    }//GEN-LAST:event_txtSearchCarKeyReleased

    private void txtSearchNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchNameKeyReleased
        // TODO add your handling code here:
        if (!txtSearchName.getText().equals("")) {
            loadCarModels("search");
        } else {
            loadCarModels("");
        }
        btnUpdateModel.setEnabled(false);
        btnDeleteModel.setEnabled(false);
        btnDetailsModel.setEnabled(false);
    }//GEN-LAST:event_txtSearchNameKeyReleased

    private void txtSearchManufactoryKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchManufactoryKeyReleased
        // TODO add your handling code here:
        if (!txtSearchManufactory.getText().equals("")) {
            loadManufactory("search");
        } else {
            loadManufactory("");
        }
        btnUpdateManufactory.setEnabled(false);
        btnDeleteManufactory.setEnabled(false);
        btnDetailsManufactory.setEnabled(false);
    }//GEN-LAST:event_txtSearchManufactoryKeyReleased

    private void txtServiceNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtServiceNameKeyReleased
        // TODO add your handling code here:
        if (flag&&Validator.isEmpty(txtServiceName.getText())) {
            btnUpdateService.setEnabled(true);
            btnDeleteService.setEnabled(true);
        }else{
            btnUpdateService.setEnabled(false);
            btnDeleteService.setEnabled(false);
        }
        
    }//GEN-LAST:event_txtServiceNameKeyReleased
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack1;
    private javax.swing.JButton btnBack2;
    private javax.swing.JButton btnBack3;
    private javax.swing.JButton btnBack4;
    private javax.swing.JButton btnBack5;
    public javax.swing.JButton btnDeleteCar;
    public javax.swing.JButton btnDeleteManufactory;
    public javax.swing.JButton btnDeleteModel;
    public javax.swing.JButton btnDeletePurchase;
    public javax.swing.JButton btnDeleteReceipt;
    public javax.swing.JButton btnDeleteService;
    public javax.swing.JButton btnDetailsCar;
    public javax.swing.JButton btnDetailsManufactory;
    public javax.swing.JButton btnDetailsModel;
    public javax.swing.JButton btnDetailsPurchase;
    public javax.swing.JButton btnDetailsReceipt;
    public javax.swing.JButton btnManufactoryReport;
    public javax.swing.JButton btnNewCar;
    public javax.swing.JButton btnNewManufactory;
    public javax.swing.JButton btnNewModel;
    public javax.swing.JButton btnNewPurchase;
    public javax.swing.JButton btnNewReceipt;
    public javax.swing.JButton btnNewService;
    private javax.swing.JButton btnNext1;
    private javax.swing.JButton btnNext2;
    private javax.swing.JButton btnNext3;
    private javax.swing.JButton btnNext4;
    private javax.swing.JButton btnNext5;
    public javax.swing.JButton btnReportCar;
    public javax.swing.JButton btnReportPurchase;
    public javax.swing.JButton btnUpdateCar;
    public javax.swing.JButton btnUpdateListCar;
    public javax.swing.JButton btnUpdateListManufactory;
    public javax.swing.JButton btnUpdateListModels;
    public javax.swing.JButton btnUpdateListPurchase;
    public javax.swing.JButton btnUpdateListReceipt;
    public javax.swing.JButton btnUpdateManufactory;
    public javax.swing.JButton btnUpdateModel;
    public javax.swing.JButton btnUpdatePurchase;
    public javax.swing.JButton btnUpdateReceipt;
    public javax.swing.JButton btnUpdateService;
    private javax.swing.ButtonGroup buttonGroup1;
    public javax.swing.JCheckBox cbxShowPurchase;
    public javax.swing.JCheckBox cbxShowReceipt;
    private org.jdesktop.swingx.JXDatePicker dpkPickReceipt;
    private org.jdesktop.swingx.JXDatePicker dpkPurchase;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    public javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    public javax.swing.JLabel lblDescriptService;
    public javax.swing.JLabel lblNameService;
    public javax.swing.JLabel lblSearchCar;
    public javax.swing.JLabel lblSearchManufactory;
    public javax.swing.JLabel lblSearchModel;
    public javax.swing.JLabel pickOrder;
    public javax.swing.JLabel pickReceipt;
    public javax.swing.JPanel pnlCar;
    public javax.swing.JPanel pnlManufactory;
    public javax.swing.JPanel pnlModel;
    public javax.swing.JPanel pnlPurchaseOrder;
    public javax.swing.JPanel pnlReceipt;
    public javax.swing.JPanel pnlService;
    public javax.swing.JPanel pnlServiceInfor;
    public org.jdesktop.swingx.JXTable tblCar;
    public org.jdesktop.swingx.JXTable tblManufactory;
    public org.jdesktop.swingx.JXTable tblModels;
    public org.jdesktop.swingx.JXTable tblOrder;
    public org.jdesktop.swingx.JXTable tblReceipt;
    public org.jdesktop.swingx.JXTable tblServices;
    public javax.swing.JTabbedPane tbpCar;
    private javax.swing.JTextArea txaDescription;
    private org.jdesktop.swingx.JXSearchField txtSearchCar;
    private org.jdesktop.swingx.JXSearchField txtSearchManufactory;
    private org.jdesktop.swingx.JXSearchField txtSearchName;
    private javax.swing.JTextField txtServiceName;
    // End of variables declaration//GEN-END:variables
    static long CarNo, PurchaseOrderID, ReceiptID;
    static String ModelName, EmployeeName;
    static int ServiceID, ManufactoryID;
    boolean flag = false;
    frmCar car;
    frmReceipt receipt;
    frmCarModel model;
    frmPurchaseOrder purchaseOrder;
    frmManufactory manufactory;

    public void loadCarData(String type) {
        Locale locale = Locale.getDefault();
        ResourceBundle rb = ResourceBundle.getBundle(Main.baseName, locale);
        ArrayList list;
        String keyword = txtSearchCar.getText();
        if (type.equals("search") && !keyword.equals("")) {
            list = new CarDAO().getList(keyword);
        } else {
            list = new Manager().getList("car");
        }
        Vector vData = new Vector();
        Vector vColumn = new Vector();
        vColumn.removeAllElements();
        vColumn.add(rb.getString("carNo"));
        vColumn.add(rb.getString("modelName"));
        vColumn.add(rb.getString("name"));
        vColumn.add(rb.getString("price"));
        for (int i = 0; i < list.size(); i++) {
            Vector vRow = new Vector();
            Car car = (Car) list.get(i);
            vRow.add(car.getCarNo());
            vRow.add(car.getModelName());
            vRow.add(car.getName());
            vRow.add(car.getPrice());
            vData.add(vRow);
        }
        DefaultTableModel model = new DefaultTableModel(vData, vColumn);
        this.tblCar.setModel(model);
    }

    public void loadCarModels(String type) {
        Locale locale = Locale.getDefault();
        ResourceBundle rb = ResourceBundle.getBundle(Main.baseName, locale);
        ArrayList list;
        String keyword = txtSearchName.getText();
        if (type.equals("search") && !keyword.equals("")) {
            list = new CarModelDAO().getList(keyword);
        } else {
            list = new Manager().getList("model");
        }
        Vector vData = new Vector();
        Vector vColumn = new Vector();
        vColumn.removeAllElements();
        vColumn.add(rb.getString("modelName"));
        vColumn.add(rb.getString("manufactoryName"));
        for (int i = 0; i < list.size(); i++) {
            Vector vRow = new Vector();
            CarModel cm = (CarModel) list.get(i);
            vRow.add(cm.getModelName());
            vRow.add(new ManufactoryDAO().getName(cm.getManufactoryID()));
            vData.add(vRow);
        }
        DefaultTableModel model = new DefaultTableModel(vData, vColumn);
        this.tblModels.setModel(model);
    }

    public void loadManufactory(String type) {
        Locale locale = Locale.getDefault();
        ResourceBundle rb = ResourceBundle.getBundle(Main.baseName, locale);
        ArrayList list;
        String keyword = txtSearchManufactory.getText();
        if (type.equals("search") && !keyword.equals("")) {
            list = new ManufactoryDAO().getList(keyword);
        } else {
            list = new Manager().getList("manufactory");
        }
        Vector vData = new Vector();
        Vector vColumn = new Vector();
        vColumn.removeAllElements();
        vColumn.add(rb.getString("ID"));
        vColumn.add(rb.getString("name"));
        vColumn.add(rb.getString("address"));
        vColumn.add(rb.getString("phone"));
        for (int i = 0; i < list.size(); i++) {
            Vector vRow = new Vector();
            Manufactory mf = (Manufactory) list.get(i);
            vRow.add(mf.getManufactoryID());
            vRow.add(mf.getName());
            vRow.add(mf.getAddress());
            vRow.add("0" + mf.getPhone());
            vData.add(vRow);
        }
        DefaultTableModel model = new DefaultTableModel(vData, vColumn);
        this.tblManufactory.setModel(model);
    }

    public void loadServices() {
        Locale locale = Locale.getDefault();
        ResourceBundle rb = ResourceBundle.getBundle(Main.baseName, locale);
        ArrayList list = new Manager().getList("service");
        Vector vData = new Vector();
        Vector vColumn = new Vector();
        vColumn.removeAllElements();
        vColumn.add(rb.getString("ID"));
        vColumn.add(rb.getString("name"));
        vColumn.add(rb.getString("descript"));
        for (int i = 0; i < list.size(); i++) {
            Vector vRow = new Vector();
            Service service = (Service) list.get(i);
            vRow.add(service.getServiceID());
            vRow.add(service.getName());
            vRow.add(service.getDescription());
            vData.add(vRow);
        }
        DefaultTableModel model = new DefaultTableModel(vData, vColumn);
        this.tblServices.setModel(model);
    }

    public void loadCarReceipt(String type) {
        Locale locale = Locale.getDefault();
        ResourceBundle rb = ResourceBundle.getBundle(Main.baseName, locale);
        ArrayList list;
        java.util.Date date = dpkPickReceipt.getDate();
        if (type.equals("search") && date != null) {
            list = new CarReceiptDAO().getList(new Date(date.getTime()));
        } else {
            list = new Manager().getList("receipt");
        }
        Vector vData = new Vector();
        Vector vColumn = new Vector();
        vColumn.removeAllElements();
        vColumn.add(rb.getString("ID"));
        vColumn.add(rb.getString("purchaseID"));
        vColumn.add(rb.getString("empName"));
        vColumn.add(rb.getString("date"));
        for (int i = 0; i < list.size(); i++) {
            Vector vRow = new Vector();
            CarReceipt cr = (CarReceipt) list.get(i);
            vRow.add(cr.getReceiptID());
            vRow.add(cr.getPurchaseOrderID());
            String name = "";
            Employee emp = new EmployeeDAO().getEmployee(cr.getEmployeeID());
            name = emp.getFirstName() + " " + emp.getLastName();
            vRow.add(name);
            vRow.add(cr.getDate());
            vData.add(vRow);
        }
        DefaultTableModel model = new DefaultTableModel(vData, vColumn);
        this.tblReceipt.setModel(model);
    }

    public void loadPurchaseOrder(String type) {
        Locale locale = Locale.getDefault();
        ResourceBundle rb = ResourceBundle.getBundle(Main.baseName, locale);
        ArrayList list;
        java.util.Date date = dpkPurchase.getDate();
        if (type.equals("search") && date != null) {
            list = new PurchaseOrderDAO().getList(new Date(date.getTime()));
        } else {
            list = new Manager().getList("purchase");
        }
        Vector vData = new Vector();
        Vector vColumn = new Vector();
        vColumn.removeAllElements();
        vColumn.add(rb.getString("ID"));
        vColumn.add(rb.getString("empName"));
        vColumn.add(rb.getString("date"));
        for (int i = 0; i < list.size(); i++) {
            Vector vRow = new Vector();
            PurchaseOrder po = (PurchaseOrder) list.get(i);
            vRow.add(po.getPurchaseOrderID());
            Employee emp = new EmployeeDAO().getEmployee(po.getEmployeeID());
            vRow.add(emp.getFirstName() + " " + emp.getLastName());
            vRow.add(po.getDate());
            vData.add(vRow);
        }
        DefaultTableModel model = new DefaultTableModel(vData, vColumn);
        this.tblOrder.setModel(model);
    }

    public void setServiceData(int ServiceID) {
        Service s = new ServiceDAO().getService(ServiceID);
        txtServiceName.setText(s.getName());
        txaDescription.setText(s.getDescription());
    }

    public Service getServiceData() {
        return new Service(ServiceID, txtServiceName.getText(), txaDescription.getText());
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        JTextComponent[] tpcService = {txtServiceName, txaDescription};
        try {

            switch (e.getActionCommand()) {
                case "next":
                    tbpCar.setSelectedIndex(tbpCar.getSelectedIndex() + 1);
                    break;
                case "back":
                    tbpCar.setSelectedIndex(tbpCar.getSelectedIndex() - 1);
                    break;
                case "updateListCar":
                    new Media(new File("chimes.wav").getAbsolutePath()).start();
                    this.btnDeleteCar.setEnabled(false);
                    this.btnUpdateCar.setEnabled(false);
                    this.btnDetailsCar.setEnabled(false);
                    loadCarData("");
                    break;
                case "updateListReceipt":
                    new Media(new File("chimes.wav").getAbsolutePath()).start();
                    loadCarReceipt("");
                    this.btnUpdateReceipt.setEnabled(false);
                    this.btnDeleteReceipt.setEnabled(false);
                    this.btnDetailsReceipt.setEnabled(false);
                    break;
                case "updateListModels":
                    new Media(new File("chimes.wav").getAbsolutePath()).start();
                    loadCarModels("");
                    this.btnDeleteModel.setEnabled(false);
                    this.btnUpdateModel.setEnabled(false);
                    this.btnDetailsModel.setEnabled(false);
                    break;
                case "updateListManufactory":
                    new Media(new File("chimes.wav").getAbsolutePath()).start();
                    this.btnDeleteManufactory.setEnabled(false);
                    this.btnUpdateManufactory.setEnabled(false);
                    this.btnDetailsManufactory.setEnabled(false);
                    loadManufactory("");
                    break;
                case "updateListPurchase":
                    new Media(new File("chimes.wav").getAbsolutePath()).start();
                    this.btnUpdatePurchase.setEnabled(false);
                    this.btnDeletePurchase.setEnabled(false);
                    this.btnDetailsPurchase.setEnabled(false);
                    loadPurchaseOrder("");
                    break;
                case "newCar":
                    if (car != null) {
                        car.requestFocus();
                    } else {
                        car = new frmCar();
                    }
                    car.setTitle("Add new Car");
                    car.btnAccept.setVisible(true);
                    car.btnAccept.setActionCommand("add");
                    car.loadEmptyForm();
                    car.setVisible(true);
                    break;
                case "updateCar":
                    if (car == null) {
                        car = new frmCar();
                    } else {
                        car.requestFocus();
                        car.btnAccept.setVisible(true);
                    }
                    car.setTitle("Update Car's Information");
                    car.btnAccept.setActionCommand("update");
                    car.setVisible(true);
                    car.loadCarData(CarNo);
                    break;
                case "deleteCar":
                    new Manager().delete(CarNo, "car");
                    loadCarData("");
                    break;
                case "detailsCar":
                    if (car == null) {
                        car = new frmCar();
                    } else {
                        car.requestFocus();
                    }
                    car.btnAccept.setVisible(false);
                    car.setTitle("View details");
                    car.setVisible(true);
                    car.loadCarData(CarNo);
                    break;
                case "newModel":
                    if (model == null) {
                        model = new frmCarModel();
                    } else {
                        model.requestFocus();
                    }
                    model.setTitle("Add new Car's Model");
                    model.btnAccept.setVisible(true);
                    model.btnBrowse.setVisible(true);
                    model.btnAccept.setActionCommand("add");
                    model.clearForm();
                    model.setVisible(true);
                    break;
                case "updateModel":
                    if (model == null) {
                        model = new frmCarModel();
                    } else {
                        model.requestFocus();
                    }
                    model.setTitle("Update Car's Model Information");
                    model.btnAccept.setVisible(true);
                    model.btnBrowse.setVisible(true);
                    model.btnAccept.setActionCommand("update");
                    model.setVisible(true);
                    model.loadData(ModelName);
                    break;
                case "deleteModel":
                    new Manager().delete(ModelName, "model");
                    break;
                case "detailsModel":
                    if (model == null) {
                        model = new frmCarModel();
                    } else {
                        model.requestFocus();
                    }
                    model.setTitle("Model's Details");
                    model.btnAccept.setVisible(false);
                    model.btnBrowse.setVisible(false);
                    model.loadData(ModelName);
                    model.setVisible(true);
                    break;
                case "newService":
                    if (Validator.validateComponents(tpcService)) {
                        new Manager().addNew(getServiceData(), "service");
                        loadServices();
                    }
                    break;
                case "updateService":
                    if (Validator.validateComponents(tpcService)) {
                        new Manager().update(getServiceData(), "service");
                        loadServices();
                    }
                    break;
                case "deleteService":
                    if (!Validator.isEmpty(txtServiceName.getText())) {
                        new Manager().delete(ServiceID, "service");
                        loadServices();
                    }
                    break;
                case "newPurchase":
                    if (purchaseOrder == null) {
                        purchaseOrder = new frmPurchaseOrder();
                    } else {
                        purchaseOrder.requestFocus();
                    }
                    purchaseOrder.setTitle("Create New Purchase Order");
                    purchaseOrder.btnAccept.setActionCommand("add");
                    purchaseOrder.btnAccept.setVisible(true);
                    purchaseOrder.setValue();
                    purchaseOrder.loadEmptyTables();
                    purchaseOrder.setVisible(true);
                    break;
                case "updatePurchase":
                    if (purchaseOrder == null) {
                        purchaseOrder = new frmPurchaseOrder();
                    } else {
                        purchaseOrder.requestFocus();
                    }
                    purchaseOrder.btnAccept.setActionCommand("update");
                    purchaseOrder.btnAccept.setVisible(true);
                    purchaseOrder.setTitle("Update Purchase Order");
                    purchaseOrder.lblPurchaseOrderID.setText(PurchaseOrderID + "");
                    purchaseOrder.btnRemoveDelete.setText("Delete");
                    purchaseOrder.btnRemoveDelete.setVisible(true);
                    purchaseOrder.btnRemoveDelete.setActionCommand("delete");
                    purchaseOrder.lblEmployeeName.setText(EmployeeName);
                    purchaseOrder.loadDetailsTable(PurchaseOrderID);
                    purchaseOrder.dpkOrder.setDate(new PurchaseOrderDAO().getPurchaseOrder(PurchaseOrderID).getDate());
                    purchaseOrder.setVisible(true);
                    break;
                case "deletePurchase":
                    new Manager().delete(PurchaseOrderID, "purchase");
                    loadPurchaseOrder("");
                    break;
                case "detailsPurchase":
                    if (purchaseOrder == null) {
                        purchaseOrder = new frmPurchaseOrder();
                    } else {
                        purchaseOrder.requestFocus();
                    }
                    purchaseOrder.setTitle("Details Purchase Order");
                    purchaseOrder.btnAccept.setVisible(false);
                    purchaseOrder.btnCar.setVisible(false);
                    purchaseOrder.btnRemoveDelete.setVisible(false);
                    purchaseOrder.loadDetailsTable(PurchaseOrderID);
                    purchaseOrder.lblPurchaseOrderID.setText(PurchaseOrderID + "");
                    purchaseOrder.lblEmployeeName.setText(EmployeeName);
                    purchaseOrder.dpkOrder.setDate(new PurchaseOrderDAO().getPurchaseOrder(PurchaseOrderID).getDate());
                    purchaseOrder.setVisible(true);
                    break;

                case "newReceipt":
                    if (receipt == null) {
                        receipt = new frmReceipt();
                    } else {
                        receipt.requestFocus();
                    }
                    receipt.lblReceiptID.setText(new Manager().getNewID("CarReceipt") + "");
                    receipt.btnAccept.setVisible(true);
                    receipt.btnPurchase.setVisible(true);
                    receipt.btnAccept.setActionCommand("add");
                    receipt.setTitle("Add Receipt Information");
                    Employee emp = new EmployeeDAO().getEmployee(Main.EmployeeID);
                    receipt.lblEmployeeName.setText(emp.getFirstName() + " " + emp.getLastName());
                    receipt.setVisible(true);
                    break;
                case "updateReceipt":
                    if (receipt == null) {
                        receipt = new frmReceipt();
                    } else {
                        receipt.requestFocus();
                    }
                    receipt.btnAccept.setVisible(true);
                    receipt.btnPurchase.setVisible(true);
                    receipt.btnAccept.setActionCommand("update");
                    receipt.setTitle("Update Receipt Information");
                    receipt.loadReceiptData(ReceiptID);
                    receipt.lblEmployeeName.setText(EmployeeName);
                    receipt.setVisible(true);
                    break;
                case "deleteReceipt":
                    new Manager().delete(ReceiptID, "receipt");
                    loadCarReceipt("");
                    break;
                case "detailsReceipt":
                    if (receipt == null) {
                        receipt = new frmReceipt();
                    } else {
                        receipt.requestFocus();
                    }
                    receipt.setTitle("Receipt Information");
                    receipt.btnAccept.setVisible(false);
                    receipt.btnPurchase.setVisible(false);
                    receipt.btnCancel.setVisible(true);
                    receipt.lblEmployeeName.setText(EmployeeName);
                    receipt.setVisible(true);
                    break;
                case "newManufactory":
                    if (manufactory == null) {
                        manufactory = new frmManufactory();
                    } else {
                        manufactory.requestFocus();
                    }
                    manufactory.setTitle("Add new Manufactory");
                    manufactory.btnAccept.setVisible(true);
                    manufactory.btnBrowse.setVisible(true);
                    manufactory.btnAccept.setActionCommand("add");
                    manufactory.setVisible(true);
                    break;
                case "updateManufactory":
                    if (manufactory == null) {
                        manufactory = new frmManufactory();
                    } else {
                        manufactory.requestFocus();
                    }
                    manufactory.btnAccept.setVisible(true);
                    manufactory.btnBrowse.setVisible(true);
                    manufactory.btnAccept.setActionCommand("update");
                    manufactory.setTitle("Update Manufactory Information");
                    manufactory.btnAccept.setActionCommand("update");
                    manufactory.loadData(ManufactoryID);
                    manufactory.setVisible(true);
                    break;
                case "deleteManufactory":
                    new Manager().delete(ManufactoryID, "manufactory");
                    loadManufactory("");
                    break;
                case "detailsManufactory":
                    if (manufactory == null) {
                        manufactory = new frmManufactory();
                    } else {
                        manufactory.requestFocus();
                    }
                    manufactory.setTitle("View Manufactory Details");
                    manufactory.btnAccept.setVisible(false);
                    manufactory.btnBrowse.setVisible(false);
                    manufactory.loadData(ManufactoryID);
                    manufactory.setVisible(true);
                    break;
                case "reportCar":
                    new Utility().getReport("Car");
                    break;
                case "reportManufactory":
                    new Utility().getReport("Manufactory");
                    break;
                case "reportPurchase":
                    try {
                        new Utility().getReportWithParam("PurchaseOrder", PurchaseOrderID + "");
                    } catch (Exception ex) {
                        Logger.getLogger(pnlCar.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    break;
            }
        } catch (SQLException ex) {
            Logger.getLogger(pnlCar.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
